import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt  # Necesario para poder mostrar los gr치ficos en Streamlit
import plotly.express as px
import numpy as np


# T칤tulo del dashboard
st.title(" 游늳Segmentaci칩n de clientes - H치bitos de compra游늴 ")

# Crear una barra lateral o pesta침as para seleccionar entre diferentes secciones
option = st.sidebar.radio("Selecciona una opci칩n", ["Introducci칩n", "EDA"])

if option == "Introducci칩n":
    st.subheader("Introducci칩n")
    st.markdown("""
    El conjunto de datos en cuesti칩n proviene de una cadena de suministro de productos para los hogares en Colombia,
    y contiene informaci칩n detallada sobre las ventas de diversos productos como v칤veres y art칤culos de aseo. Cada registro incluye datos sobre
    el producto vendido, la fecha de la transacci칩n, el tipo de producto, y cu치l ha sido el producto m치s vendido en un periodo determinado.
    El objetivo principal de este an치lisis es segmentar a los clientes en diferentes grupos seg칰n sus h치bitos de compra, lo que permitir치 ofrecer
    un sistema de recomendaci칩n de productos basado en su historial de compras. A trav칠s del uso de modelos de clasificaci칩n de machine learning (ML),
    se buscar치 identificar patrones y comportamientos recurrentes en las compras de los clientes, con el fin de mejorar la personalizaci칩n
    de las ofertas y optimizar las estrategias comerciales. Este enfoque no solo ayudar치 a entender mejor las preferencias del cliente, sino que tambi칠n 
    contribuir치 a aumentar la eficiencia y la satisfacci칩n del cliente mediante la propuesta de productos adecuados y oportunos.
    Los datos sobre las ventas de productos fueron capturan a trav칠s de sistemas de punto de venta (POS), los cuales registran cada transacci칩n
    realizada en el comercio. Estos sistemas permiten almacenar informaci칩n clave, como el tipo de producto, la cantidad,
    el precio, y la fecha y hora de la venta, as칤 como el m칠todo de pago utilizado.
    
    - **Objetivo General**: Desarrollar un modelo de segmentaci칩n de clientes basado en los h치bitos de compra
    a partir de los datos de ventas de una cadena de suministro de productos para el hogar en Magangu칠, Bol칤var, con
    el fin de implementar un sistema de recomendaci칩n de productos y optimizar las estrategias comerciales mediante 
    el uso de modelos de clasificaci칩n de machine learning.

    - ***Objetivos espec칤ficos***:
        - Realizar un an치lisis exploratorio de datos (EDA)
        - Segmentar a los clientes
        - Desarrollar y entrenar modelos de clasificaci칩n de machine learning
        - Proponer un sistema de recomendaci칩n de productos
        - Evaluar el rendimiento de los modelos de clasificaci칩n y recomendaci칩n
    """)
    # Imagen desde GitHub
    st.image("https://github.com/yeisondelatorre/Trabajorfinal/blob/main/ima1.jpeg?raw=true", caption="Descripci칩n de la imagen", use_container_width=True)

elif option == "EDA":
    st.subheader("An치lisis Exploratorio de Datos (EDA)")
    st.write("""
    En esta secci칩n realizaremos el an치lisis exploratorio de datos (EDA) para comprender mejor la base de datos.
    Se pueden incluir gr치ficas, estad칤sticas descriptivas y otras herramientas 칰tiles para explorar los datos.
    """)
    
    uploaded_file = st.file_uploader("Cargar archivo CSV", type="csv")
    if uploaded_file is not None:
        try:
            df = pd.read_csv(uploaded_file)
            st.write("Primeras filas del dataframe:")
            st.write(df.head())  # Muestra las primeras filas del dataframe

            # Estad칤sticas descriptivas
            st.write("Estad칤sticas Descriptivas:")
            st.write(df.describe())

            # Asegurar que las columnas clave est칠n en el tipo correcto
            df['cantidad'] = pd.to_numeric(df['cantidad'], errors='coerce')
            df['precio_dig'] = pd.to_numeric(df['precio_dig'], errors='coerce')

            # Crear una nueva columna de ingresos totales por venta
            df['Total_Venta'] = df['cantidad'] * df['precio_dig']

            # Filtro de productos m치s vendidos
            productos_filtrar = [590101, 590102, 590103, 205003, 200130, 800020, 205601, 540101, 501121, 501120]
            dfinal = df[df['codproducto'].isin(productos_filtrar)]  # Filtrar productos

            # Agrupar por producto para calcular total de unidades vendidas y total de ingresos
            top_productos = df.groupby(['codproducto', 'nom_producto']).agg(
                Total_Unidades=('cantidad', 'sum'),
                Total_Ventas=('Total_Venta', 'sum')
            ).reset_index()

            # Ordenar por la cantidad vendida
            top_productos = top_productos.sort_values(by=['Total_Unidades'], ascending=False)

            # Gr치fico de Top 10 Productos M치s Vendidos usando Plotly
            st.subheader("Gr치fico de Top 10 Productos M치s Vendidos")
            fig = px.bar(top_productos.head(10), 
                         x='Total_Unidades', 
                         y='nom_producto', 
                         orientation='h', 
                         title="Top 10 Productos M치s Vendidos por Cantidad", 
                         labels={"Total_Unidades": "Total de Unidades Vendidas", "nom_producto": "Producto"}, 
                         color='Total_Unidades',
                         color_continuous_scale='Blues')
            st.plotly_chart(fig)

            # Gr치fico de Distribuci칩n de Ventas por Tipo de Cliente usando Plotly
            st.subheader("Distribuci칩n de Ventas por Tipo de Cliente")
            ventas_tipo_cliente = df.groupby('nom_tipocliente')['Total_Venta'].sum().reset_index()
            fig2 = px.bar(ventas_tipo_cliente, 
                          x='nom_tipocliente', 
                          y='Total_Venta', 
                          title="Distribuci칩n de Ventas por Tipo de Cliente", 
                          labels={"nom_tipocliente": "Tipo de Cliente", "Total_Venta": "Total de Ventas"},
                          color='Total_Venta', 
                          color_continuous_scale='Purples')
            st.plotly_chart(fig2)

            # Histograma de los productos vendidos usando Matplotlib
            st.subheader("Histograma de Productos Vendidos")
            plt.figure(figsize=(12, 6))
            dfinal.groupby('nom_producto')['Total_Venta'].sum().plot(kind='bar', color='seagreen', alpha=0.7, edgecolor='black')
            plt.xlabel("Producto", fontsize=12)
            plt.ylabel("Total de Ventas", fontsize=12)
            plt.title("Total de Ventas por Producto", fontsize=14)
            plt.xticks(rotation=45, ha='right')
            plt.tight_layout()  # Asegura que las etiquetas no se corten
            st.pyplot(plt)  # Mostrar gr치fico en Streamlit

        except Exception as e:
            st.error(f"Error al cargar el archivo: {e}")
